export PATH="/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/3.3.0/bin:$PATH"
eval $(/opt/homebrew/bin/brew shellenv)
# Created by Zap installer
[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"
plug "zsh-users/zsh-autosuggestions"
plug "zap-zsh/supercharge"
plug "zap-zsh/zap-prompt"
plug "zsh-users/zsh-syntax-highlighting"

# Load and initialise completion system
autoload -Uz compinit
compinit

#zoxide conf
eval "$(zoxide init --cmd cd zsh)"
alias ..='cd ..'

# start zelli with zsh
eval "$(zellij setup --generate-auto-start zsh)"

# export HELIX_RUNTIME=~/Documents/Dev/helix/runtime
# The fuck
eval $(thefuck --alias)

alias ls='eza --icons'
alias ld='eza -l --header --icons --git'
alias lr='eza --recurse --icons'
alias lt='eza -T'

alias vim='nvim'
alias chez='chezmoi'
alias chezapply='chezmoi -v apply'
alias editzsh='hx ~/.zshrc'
alias edityabai='nova ~/.config/yabai/yabairc'
alias editskhd='nova ~/.config/skhd/skhdrc'

alias a='php artisan'
alias r='rails'
# fastfetch --structure Title:datetime:OS:Uptime:Packages:Terminal:LocalIp:Memory:Disk:Battery

export EDITOR=hx
export VISUAL="$EDITOR"

#devmode toggle
devmode_active=0

toggle_mode() {
  if [[ $devmode_active -eq 0 ]]; then
    # Enable devmode
    yabai --start-service
    skhd --start-service
    defaults write com.apple.dock autohide -bool true
    defaults write com.knollsoft.Hookshot screenEdgeGapBottom 44
    brew services start sketchybar
    echo "Switched to devmode"
    devmode_active=1
  else
    # Enable normalmode
    yabai --stop-service
    skhd --stop-service
    defaults write com.apple.dock autohide -bool false
    defaults write com.knollsoft.Hookshot screenEdgeGapBottom 4
    brew services stop sketchybar
    echo "Switched to normalmode"
    devmode_active=0
  fi
}

# Add an alias for easy access
alias devmode="toggle_mode"

# eval "$(starship init zsh)"

function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
